<!doctype html>
<html lang="en">
  <%- include("./layout/server-var") %>

  <head>
    <%- include("./layout/header") %>
    <title>UNO Game</title>
  </head>

  <%- include("./layout/nav-bar") %>

  <body
    class="bg-gray-200 flex flex-col items-center justify-center min-h-screen"
  >
    <div class="container mx-auto px-4 h-full">
      <div class="flex">
        <!-- UNO Game Interface -->
        <div class="w-full h-3/4 border border-yellow-500 p-4">
          <h2 class="text-lg font-bold mb-4 text-red-500">UNO GAME</h2>

          <div class="w-full flex justify-center">YOUR OPPONENT(S)</div>

          <div class="w-full">
            <!-- OPPONENT(S) -->
            <div class="flex items-center justify-center">
              <!-- Player 2's cards -->
              <div class="flex items-center justify-center">
                <!-- Card 1 -->
                <img src="cards/Back.png" alt="Card 1" class="w-16 h-24 m-2" />
                <div class="flex flex-col items-center ml-2">
                  <span>Player 2</span>
                  <span>x7</span>
                </div>
              </div>

              <!-- Player 3's cards -->
              <div class="flex items-center justify-center ml-4">
                <!-- Card 2 -->
                <img src="cards/Back.png" alt="Card 2" class="w-16 h-24 m-2" />
                <div class="flex flex-col items-center ml-2">
                  <span>Player 3</span>
                  <span>x2</span>
                </div>
              </div>

              <!-- Player 4's cards -->
              <div class="flex items-center justify-center ml-4">
                <!-- Card 3 -->
                <img src="cards/Back.png" alt="Card 3" class="w-16 h-24 m-2" />
                <div class="flex flex-col items-center ml-2">
                  <span>Player 4</span>
                  <span>x4</span>
                </div>
              </div>
            </div>
          </div>

          <div id="discardPileContainer" class="w-24 h-24">
            <!-- Dynamic content -->
          </div>

          <!-- Player Cards and Controls -->
          <div id="cardContainer" class="flex flex-wrap justify-center">
            <!-- Dynamic cards -->
          </div>

          <div class="flex justify-center">
            <button
              class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mr-2"
              id="startGameButton"
            >
              Start Game
            </button>

            <!-- <button
              class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded mr-2 hidden"
              id="abandonButton"
            >
              Abandon
            </button> -->

            <button
              class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mr-2 hidden"
              id="drawButton"
            >
              Draw
            </button>

            <button
              class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded mr-2 hidden"
              id="sayUnoButton"
            >
              SAY UNO!
            </button>
          </div>
        </div>

        <%- include("./layout/chat-box") %>
      </div>
    </div>

    <script>
      const startGameButton = document.getElementById("startGameButton");
      const drawButton = document.getElementById("drawButton");
      const sayUnoButton = document.getElementById("sayUnoButton");
      const cardContainer = document.getElementById("cardContainer");

      function startGame() {
        showGameControls();
        updateGameState();
      }

      function showGameControls() {
        drawButton.classList.remove("hidden");
        sayUnoButton.classList.remove("hidden");
      }

      // current game state (e.g., current player, playable cards)
      function updateGameState() {
        const gameId = "<%= gameId %>";
        fetch(`/game/${gameId}/get-status`, { method: "POST" })
          .then((response) => response.json())
          .then((data) => {
            console.log("Current Game State:", data);
            displayCards(data.current_user_cards);
            displayDiscard(data.last_card_played);
          })
          .catch((error) => console.error("Error fetching game state:", error));
      }

      // cards in the user's hand
      function displayCards(cards) {
        cardContainer.innerHTML = "";
        cards.forEach((card) => {
          console.log("Card:", card);
          const cardElement = document.createElement("img");
          cardElement.src = card.path;
          cardElement.alt = `${card.path}`;
          cardElement.classList.add("w-16", "h-24", "m-2");
          cardContainer.appendChild(cardElement);
        });
      }

      // display a random card as the discard pile
      function displayDiscard(card) {
        discardPileContainer.innerHTML = "";
        console.log("discard pile current:", card);
        const cardElement = document.createElement("img");
        cardElement.src = card.path;
        cardElement.alt = `${card.path}`;
        discardPileContainer.appendChild(cardElement);
      }

      function drawCard() {
        const gameId = "<%= gameId %>";
        fetch(`/game/${gameId}/play`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ card_index: null, wild_color: null }),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Card drawn:", data);
            updateGameState();
          })
          .catch((error) => console.error("Error drawing card:", error));
      }

      // Event listeners
      startGameButton.addEventListener("click", startGame);
      drawButton.addEventListener("click", drawCard);
      sayUnoButton.addEventListener("click", () =>
        console.log("SAY UNO! button clicked")
      );
    </script>
  </body>
</html>
